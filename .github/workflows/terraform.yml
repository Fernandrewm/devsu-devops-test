name: 'Terraform CI/CD'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'eks-terraform/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'eks-terraform/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./eks-terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.10.5"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Terraform Format Check
      id: fmt
      run: |
        echo "::group::Terraform Format Check"
        terraform fmt -check -recursive
        echo "::endgroup::"

    - name: Terraform Init
      id: init
      run: |
        echo "::group::Terraform Init"
        terraform init
        echo "::endgroup::"

    - name: Terraform Validate
      id: validate
      run: |
        echo "::group::Terraform Validate"
        terraform validate
        echo "::endgroup::"

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: |
        echo "::group::Terraform Plan"
        terraform plan -no-color -out=tfplan 2>&1 | tee plan.txt
        echo "::endgroup::"

    - name: Update Pull Request
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const plan = fs.readFileSync('./eks-terraform/plan.txt', 'utf8');
          
          const comment = `## Terraform Plan 🚀
          
          <details><summary>View plan details (click to expand)</summary>
          
          \`\`\`hcl
          ${plan}
          \`\`\`
          
          </details>
          
          * ✅ Format validated
          * ✅ Configuration validated
          * ℹ️ This plan will be applied automatically when merging to main
          
          > Note: This is a temporary environment that will be destroyed automatically after 4 hours.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          })

    - name: Terraform Plan (Main)
      id: plan-main
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: |
        echo "::group::Terraform Plan"
        terraform plan -no-color -out=tfplan
        echo "::endgroup::"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: |
        echo "::group::Terraform Apply"
        terraform apply -auto-approve tfplan
        echo "::endgroup::"
