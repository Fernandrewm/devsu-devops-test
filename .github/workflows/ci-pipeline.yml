name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Agregamos los permisos necesarios
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      working-directory: ./devsu-demo-devops-python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest
        
    - name: Create env file
      working-directory: ./devsu-demo-devops-python
      run: |
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        
    - name: Run tests with coverage
      working-directory: ./devsu-demo-devops-python
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      run: |
        coverage run manage.py test
        coverage report > coverage_report.txt
        coverage html
        echo "COVERAGE=$(coverage report | grep TOTAL | awk '{print $4}')" >> $GITHUB_ENV
        
    - name: Store coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          ./devsu-demo-devops-python/htmlcov
          ./devsu-demo-devops-python/coverage_report.txt
          
    - name: Comment PR with Coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const coverageReport = fs.readFileSync('./devsu-demo-devops-python/coverage_report.txt', 'utf8');
          const coverage = process.env.COVERAGE;
          
          const comment = `## Coverage Report: ${coverage}
          <details>
          <summary>View full details</summary>
          
          \`\`\`
          ${coverageReport}
          \`\`\`
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          })

  static-analysis:
    name: Static Code Analysis
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      working-directory: ./devsu-demo-devops-python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pylint pylint-django
        
    - name: Create env file
      working-directory: ./devsu-demo-devops-python
      run: |
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        
    - name: Create flake8 config
      working-directory: ./devsu-demo-devops-python
      run: |
        echo "[flake8]
        max-line-length = 120
        exclude = .git,__pycache__,migrations
        ignore = E203, W503" > setup.cfg
        
    - name: Run flake8
      working-directory: ./devsu-demo-devops-python
      run: flake8 . --count --statistics
        
    - name: Run pylint
      working-directory: ./devsu-demo-devops-python
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      run: |
        pylint --load-plugins=pylint_django \
               --django-settings-module=demo.settings \
               --disable=C0111,C0114,C0115,C0116,R0903,C0103 \
               --ignore=migrations \
               api demo
