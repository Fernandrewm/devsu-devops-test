apiVersion: apps/v1
kind: Deployment
metadata:
  name: devsu-demo
  namespace: devsu-demo-ns
  labels:
    app: devsu-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: devsu-demo
  template:
    metadata:
      labels:
        app: devsu-demo
    spec:
      initContainers:
      - name: init-db
        image: fernandre/devsu-demo:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          mkdir -p /data
          chmod 777 /data
          if [ ! -f /data/db.sqlite3 ]; then
            echo "Initializing database..."
            cd /app
            python manage.py migrate
          fi
        volumeMounts:
        - name: sqlite-data
          mountPath: /data
        envFrom:
        - configMapRef:
            name: devsu-demo-config
        - secretRef:
            name: devsu-demo-secrets
      containers:
      - name: devsu-demo
        image: fernandre/devsu-demo:latest
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        envFrom:
        - configMapRef:
            name: devsu-demo-config
        - secretRef:
            name: devsu-demo-secrets
        volumeMounts:
        - name: sqlite-data
          mountPath: /data
          readOnly: true
        livenessProbe:
          httpGet:
            path: /api/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: sqlite-data
        persistentVolumeClaim:
          claimName: sqlite-pvc 